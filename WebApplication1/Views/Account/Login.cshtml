@model StudentTaskManagement.ViewModels.LoginViewModel


<div class="container mt-5">
    <div class="row justify-content-center">
        <!-- Login Form -->
        <div class="col-md-5 mt-4 user-input-col-5">
            <div class="text-center mb-4">
                <h2 class="fw-bold text-primary text-accent-blue">Welcome back</h2>
                <p class="text-muted">Enter your email and password to sign in</p>
            </div>

            <form id="loginForm">
                @Html.AntiForgeryToken()
                <div class="mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <input asp-for="Email" type="email" class="form-control form-control-lg" placeholder="Email">
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Password" class="form-label">Password</label>
                    <input asp-for="Password" type="password" class="form-control form-control-lg" placeholder="Password">
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-check form-switch mb-4">
                    <input asp-for="RememberMe" class="form-check-input" type="checkbox" id="rememberMe">
                    <label class="form-check-label" for="rememberMe">Remember me</label>
                </div>

                <button type="button" class="btn btn-primary w-100 btn-lg fw-bold" onclick="handleSubmit()">Sign in</button>

                <div class="text-center mt-1">
                    <span class="text-muted">Don't have an account? </span>
                    <a href="/Account/Registration" class="text-primary fw-bold text-decoration-none text-accent-blue">Sign up</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function handleSubmit() {
            Swal.fire({
                title: 'Logging in...',
                text: 'Please wait for a moment',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const form = document.getElementById('loginForm');
            const formData = new FormData(form);

            fetch('/Account/Login', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                            window.location.href = '/Home/Index';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: data.message
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong! Please try again.'
                });
            });
        }
    </script>
}