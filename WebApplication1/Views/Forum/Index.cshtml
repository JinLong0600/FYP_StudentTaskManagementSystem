@model List<StudentTaskManagement.ViewModels.L1DiscussionsViewModel>;
@using static StudentTaskManagement.Utilities.GeneralEnum;
@{
    ViewData["Title"] = "Forum";
}


<div class="container">
    <!-- Forum Header -->
    <div class="card mb-4">
        <div class="d-flex justify-content-between align-items-center" style="margin: 25px 25px 0px 25px">
            <div>
                <h4 class="">
                    <i class="fa-solid fa-people-group me-2"></i>Discussion Forum
                </h4>
                <p class="text-muted">Join the conversation with our community</p>
            </div>
            <div>
                <a href="@Url.Action("CreateForum", "Forum")" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i> New Post
                </a>
            </div>
        </div>
        <hr class="separator">
        <div class="card-body"  style="padding: 1rem 2.5rem 2.5rem 2.5rem;">
            <div class="row g-3">
                <!-- Title Search -->
                <div class="col-md-4">
                    <label class="form-label">Search</label>
                    <input type="text" class="form-control" id="titleSearch" placeholder="Search tasks...">
                </div>
                <!-- Tag Search -->
                <div class="col-md-4">
                    <label class="form-label">Tags</label>
                    <div class="form-control tag-input-container">
                        <div class="tag-list" id="selectedTags">
                            <!-- Selected tags will be inserted here -->
                        </div>
                        <input type="text"
                                class="tag-input"
                                id="tagSearch"
                                placeholder="Search by tags...">
                    </div>
                    <input type="hidden" id="selectedTagsInput" name="tags" value="">
                </div>

                <!-- Status Filter -->
                <div class="col-md-2">
                    <label class="form-label fw-semibold">Status</label>
                    <div class="custom-dropdown">
                        <select class="form-select" id="statusFilter">
                            <option value="">All Status</option>
                            <option value="@((int)ForumStatus.Active)">Active</option>
                            <option value="@((int)ForumStatus.Resolved)">Resolved</option>
                        </select>
                    </div>
                </div>

                <!-- Sort Order -->
                <div class="col-md-2">
                    <label class="form-label fw-semibold">Sort</label>
                    <div class="custom-dropdown">
                        <select class="form-select" id="sortOrder">
                            <option value="newest">Newest First</option>
                            <option value="oldest">Oldest First</option>
                            <option value="mostLiked">Most Liked</option>
                            <option value="mostCommented">Most Commented</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-8"></div>
                <div class="col-md-4">
                    <div class="row">
                        <div class="col-6">            
                            <div class="d-flex flex-column justify-content-center h-100">
                                <button class="btn btn-outline-secondary w-100" style="padding: 8px 16px;" onclick="clearFilters()">
                                    <i class="fas fa-times me-1"></i>Clear Filter
                                </button>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="d-flex flex-column justify-content-center h-100">
                            <button class="btn btn-primary w-100" id="searchButton">
                                <i class="fas fa-filter me-2"></i>Apply Filters
                            </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add this after your filter card -->
    <div id="forumPosts" class="forum-categories">
        <!-- Forum posts will be loaded here -->
    </div>

    <!-- Add pagination -->
    <div class="pagination-container mt-4">
        <nav aria-label="Forum pages">
            <ul class="pagination justify-content-center">
            </ul>
        </nav>
    </div>
</div>

@section Styles {
    <style>
        :root {
            --primary-color: #4f46e5;
            --primary-hover: #4338ca;
            --bg-gradient: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        }

        .container {
            max-width: 1200px;
        }

        /* Card Styling */
        .forum-card {
            border: 1px solid rgba(0,0,0,.1);
            border-radius: 16px;
            transition: all 0.3s ease;
        }

        .forum-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        /* Latest Post */
        .latest-post {
            background-color: #f5f5f5;
            padding: 1rem;
            border-radius: 12px;
        }

        /* Badge Styling */
        .badge.rounded-pill {
            font-size: 0.75rem;
            padding: 0.35em 0.8em;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .badge.rounded-pill.interaction {
            font-size: 1rem;
            padding: 0.35em 0.8em;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-right: 0.5rem;
        }

        .badge.bg-primary {
            background: var(--bg-gradient) !important;
            font-size: 0.75rem;
            padding: 0.35em 0.8em;
        }

        .d-flex.align-items-start.flex-column {
            gap: 0.25rem;
        }

        /* Search Bar */
        .input-group {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,.05);
        }

        .input-group-text {
            border: none;
            background-color: white;
            padding-left: 20px;
        }

        .input-group .form-control {
            border: none;
            padding: 12px;
            font-size: 1rem;
        }

        .input-group .btn-outline-secondary {
            border-color: #e2e8f0;
            color: #64748b;
            padding: 12px 24px;
            border-radius: 0;
            border-left: none;
        }

        .input-group .btn-outline-secondary:hover {
            background-color: #f8fafc;
            border-color: #e2e8f0;
            color: #475569;
        }

        /* Description Text */
        .text-muted {
            line-height: 1.5;
        }

        /* Tags Styling */
        .tags-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .tag-badge {
            background: rgba(79, 70, 229, 0.1);
            color: var(--primary-color);
            font-size: 0.75rem;
            padding: 0.35em 0.8em;
            font-weight: 500;
            transition: all 0.2s ease;
            cursor: pointer;
        }

        .tag-badge:hover {
            background: rgba(79, 70, 229, 0.15);
            transform: translateY(-1px);
        }

        /* Comment Count Badge */
        .badge.bg-light {
            background-color: #f1f5f9 !important;
            color: #64748b !important;
            border: 1px solid #e2e8f0;
            padding: 0.35em 0.8em;
        }

        .badge.bg-light i {
            color: #64748b;
            margin-right: 0.25rem;
        }

        .badge.bg-light i.fa-heart {
            color: #ef4444;  /* Red color for heart icon */
        }

        /* Pagination Styling */
        .pagination .page-link {
            color: var(--primary-color);
            border: 1px solid #e2e8f0;
            padding: 0.5rem 1rem;
            margin: 0 0.25rem;
            border-radius: 8px;
            transition: all 0.2s ease;
        }

        .pagination .page-item.active .page-link {
            background: var(--bg-gradient);
            border-color: transparent;
            color: white;
        }

        .pagination .page-item.disabled .page-link {
            color: #94a3b8;
            background-color: #f1f5f9;
            border-color: #e2e8f0;
        }

        .pagination .page-link:hover:not(.disabled) {
            background-color: #f8fafc;
            border-color: #e2e8f0;
            transform: translateY(-1px);
        }

        .description-container {
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            padding: 16px;
            margin-bottom: 1rem;
            background-color: #f8f9fa;
        }

        .description-container-transparent {
            min-height: 45px;
            margin-bottom: 1rem;
        }

        .description-text {
            display: -webkit-box;
            -webkit-box-orient: vertical;
            overflow: hidden;
            margin-bottom: 0;
            line-height: 1.5;
        }
        .tag-input-container {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    padding: 5px;
    min-height: 38px;
    align-items: center;
}

.tag-input {
    border: none;
    outline: none;
    flex: 1;
    min-width: 60px;
    padding: 12px 8px;
    height: 2.4rem;
}

.tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
}

.tag-item {
    background: rgba(79, 70, 229, 0.1);
    color: var(--primary-color);
    padding: 2px 8px;
    border-radius: 15px;
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    gap: 5px;
}

.tag-item .remove-tag {
    cursor: pointer;
    font-size: 14px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.tag-item .remove-tag:hover {
    color: #dc3545;
}

.form-label {
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: #4b5563;
}

.status-resolved {
    background-color: #6B7280;  /* Gray-500 color */
    color: white;
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.35em 0.85em;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-radius: 20px;
    display: inline-flex;
    align-items: center;
}
    </style>
}

@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;

        // Initial load
        $(document).ready(function() {
            loadForumPosts(1);
        });

        // Load forum posts
        function loadForumPosts(page) {
            const filters = getFilterValues();
            filters.page = page;
            filters.pageSize = pageSize;

            $.ajax({
                url: '@Url.Action("AjaxGetForumPosts", "Forum")',
                type: 'GET',
                data: filters,
                beforeSend: function() {
                    // Show loading state
                    $('#forumPosts').html('<div class="text-center"><i class="fas fa-spinner fa-spin fa-2x"></i></div>');
                },
                success: function(response) {
                    if (response.success) {
                        renderForumPosts(response.data);
                        updatePagination(response.totalPages, response.currentPage);
                        currentPage = page;
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to load forum posts'
                        });
                    }
                },
                error: function(error) {
                    console.error('Error loading forum posts:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to load forum posts'
                    });
                }
            });
        }

        function renderForumPosts(posts) {
            const container = $('#forumPosts');
            container.empty();

            if (posts.length === 0) {
                container.html('<div class="card mb-3 forum-card""><div class="card-body" style="text-align: center;"><h3>No Forum found</h3></div></div>');
                return;
            }
            console.log(posts);
            posts.forEach(post => {
                const forumHtml = `
                <div class="card mb-3 forum-card" id="forum-${post.forumId}">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-9">
                            <div class="d-flex align-items-start flex-column mb-2">
                                ${renderNew(post.isNew)}
                                <h5 class="card-title d-flex align-items-center gap-2">
                                    <span class="text-decoration-none text-dark fw-bold">
                                        ${post.title}
                                    </span>
                                        ${renderResolved(post.isResolved)}
                                </h5>
                            </div>
                            <div class="description-container">
                                <div class="description-container-transparent mb-3">
                                    <p class="text-muted description-text">${post.description}</p>
                                </div>
                                <div class="tags-container">
                                ${renderTags(post.label)}
                                </div>
                            </div>
                            <div class="d-flex align-items-center mt-2">
                                <span class="badge rounded-pill interaction bg-light text-dark">
                                    <i class="fas fa-heart"></i>${post.likeCount}
                                </span>
                                <span class="badge rounded-pill interaction bg-light text-dark me-2">
                                    <i class="fas fa-comments"></i> ${post.commentCount}
                                </span>
                            </div>
                        </div>
                        <div class="col-md-3">
                                <div class="latest-post">
                                    <small class="text-muted d-block mb-1">
                                        Posted by
                                    </small>
                                    <div class="d-flex align-items-center">
                                            ${renderImage(post)}
                                        <div>
                                            <div class="fw-bold text-truncate" style="max-width: 200px;">
                                                ${post.authorName}
                                            </div>
                                            <small class="text-muted">
                                                <span>
                                                    ${post.lastModifiedDate}
                                                </span>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
                `;
                container.append(forumHtml);

                // Add click handler for the entire card
                $(`#forum-${post.forumId}`).click(function(e) {
                    // Don't redirect if clicking on a link or button
                    if (!$(e.target).is('a, button, .btn')) {
                        window.location.href = `@Url.Action("Details", "Forum")/${post.forumId}`;
                    }
                });
            });
        }

        function renderTags(tags) {
            if (!tags) return '';

            // Split the comma-separated string into an array
            const tagArray = tags.split(',').filter(tag => tag.trim() !== '');

            if (tagArray.length === 0) return '';

            return tagArray.map(tag => `
                        <span class="badge rounded-pill tag-badge">
                            <i class="fas fa-tag me-1"></i>${tag.trim()}
                        </span>
                    `).join('');
        }

        function renderImage(post) {
            if (post.authorProfileImage) {
                return `
                                <img src="${post.authorProfileImage}"
                                    class="rounded-circle me-2"
                                    width="45"
                                    height="45">
                                `;
            } else {
                return `
                                <img src="https://ui-avatars.com/api/?name=${post.authorName}&background=random"
                                    class="rounded-circle me-2"
                                    alt="${post.authorName}"
                                    width="32"
                                    height="32">
                                `;
            }
        }
        function renderNew(isNew) {
            if (isNew) {
            return `<span class="badge rounded-pill bg-primary mb-2">New</span>`;
            } else{
                return ``;
            }
            
        }

        function renderResolved(isResolved) {
            if (isResolved) {
                return `<span class="status-resolved">Resolved</span>`;
            } else {
                return ``;
            }

        }

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function updatePagination(totalPages, currentPage) {
            const pagination = document.querySelector('.pagination');
            let paginationHtml = '';
            if (totalPages >= 1) 
            {
                // Previous button
                paginationHtml += `
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" onclick="loadPresets(${currentPage - 1})" tabindex="-1">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>
                `;
            
                // Page numbers
                for (let i = 1; i <= totalPages; i++) {
                    paginationHtml += `
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" onclick="loadPresets(${i})">${i}</a>
                        </li>
                    `;
                }
            
                // Next button
                paginationHtml += `
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" onclick="loadPresets(${currentPage + 1})">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                `;
            }
            pagination.innerHTML = paginationHtml;
        }

        // Update search and filter handlers
        $('#searchButton').click(function() {
            currentPage = 1;
            loadForumPosts(1);
        });

        // Debounced search for title and tags
        let searchTimeout;
    </script>
    <script>

        // Function to get all current filter values
        /*function getFilterValues() {
            return {
                titleSearch: $('#titleSearch').val(),
                tagSearch: $('#tagSearch').val(),
                status: $('#statusFilter').val(),
                sortOrder: $('#sortOrder').val(),
                page: currentPage,
                pageSize: pageSize
            };
        }*/

        // Debounced search function
        function debouncedSearch() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                currentPage = 1;
                loadForumPosts(currentPage);
            }, 500);
        }

        // Search button click handler
        $('#searchButton').click(function() {
            currentPage = 1;
            loadForumPosts(currentPage);
        });
    </script>
    <script>
let selectedTags = [];

// Add a hidden input field to your form
//$('#forumForm').append('<input type="hidden" id="selectedTagsInput" name="tags" value="">');

// Tag input handling
$('#tagSearch').on('keydown', function(e) {
    if (e.key === 'Enter' || e.key === ',') {
        e.preventDefault();
        const tag = $(this).val().trim();
        if (tag && !selectedTags.includes(tag)) {
            addTag(tag);
            $(this).val('');
            updateHiddenInput(); // Update hidden input when adding tag
        }
    }
});

function addTag(tag) {
    selectedTags.push(tag);
    const tagElement = $(`
        <div class="tag-item" data-tag="${tag}">
            ${tag}
            <span class="remove-tag">
                <i class="fas fa-times"></i>
            </span>
        </div>
    `);
    
    // Add click handler for removing tags
    tagElement.find('.remove-tag').on('click', function() {
        const tagToRemove = $(this).parent().attr('data-tag');
        selectedTags = selectedTags.filter(t => t !== tagToRemove);
        $(this).parent().remove();
        updateHiddenInput(); // Update hidden input when removing tag
    });
    
    $('#selectedTags').append(tagElement);
}

// Function to update hidden input value
function updateHiddenInput() {
    $('#selectedTagsInput').val(selectedTags.join(','));
}

// Update getFilterValues function
function getFilterValues() {
    return {
        titleSearch: $('#titleSearch').val(),
        tags: $('#selectedTagsInput').val(), //selectedTags, // Now sending array of tags
        status: $('#statusFilter').val(),
        sortOrder: $('#sortOrder').val(),
        page: currentPage,
        pageSize: pageSize
    };
}

// Clear filters function
function clearFilters() {
    $('#titleSearch').val('');
    selectedTags = [];
    $('#selectedTags').empty();
    $('#selectedTagsInput').val('');
    $('#statusFilter').val('');
    $('#sortOrder').val('newest');
    currentPage = 1;
    loadForumPosts(1);
}


</script>
}
